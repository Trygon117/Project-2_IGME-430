(()=>{var e={832:(e,a,t)=>{const n=t(603),s=e=>(console.log(e),React.createElement("div",null,React.createElement("div",{className:"box",style:{minHeight:"100vh"}},React.createElement("h1",{className:"title"},"My Novels:"),React.createElement("hr",null),React.createElement("div",{className:"columns is-centered"},React.createElement("div",{id:"novel-cards",className:"coulumn"}))))),c=e=>React.createElement("div",{className:"card",style:{width:200}},React.createElement("div",{className:"card-image"},React.createElement("figure",{className:"image is-2by3"},React.createElement("img",{src:"assets/1080x1920",alt:"Placeholder image"}))),React.createElement("div",{className:"card-content"})),r=e=>React.createElement("div",{className:"card",style:{width:200},onMouseEnter:e=>{e.currentTarget.style.width=250},onMouseLeave:e=>{e.currentTarget.style.width=200},onClick:a=>{l(e)}},React.createElement("div",{className:"card-image"},React.createElement("figure",{className:"image is-2by3"},React.createElement("img",{src:"/assets/img/AddCard.png",alt:"Placeholder image"})))),l=e=>{const a=e=>React.createElement("form",{id:"createNovelForm",name:"createNovelForm",onSubmit:handleCreateNovel,action:"/createNovel",method:"POST",className:"mainForm box"},React.createElement("div",{className:"title"},React.createElement("h1",null,"Create A New Novel!")),React.createElement("div",{className:"field"},React.createElement("label",{className:"label",htmlFor:"title"},"Title: "),React.createElement("div",{className:"control has-icons-left"},React.createElement("input",{className:"input",id:"title",type:"text",name:"title",placeholder:"Title"}),React.createElement("span",{className:"icon is-small is-left"},React.createElement("i",{className:"fa-solid fa-book"})))),React.createElement("div",{className:"field"},React.createElement("label",{className:"label"},"Book Cover: "),React.createElement("div",{className:""},React.createElement("div",{className:"file is-boxed has-name is-info"},React.createElement("label",{className:"file-label"},React.createElement("input",{className:"file-input",id:"cover",type:"file",name:"cover",onChange:async e=>{const a=e.currentTarget.files[0];if(!a)return;const t=new FileReader;t.addEventListener("load",(()=>{const e=t.result;document.querySelector("#coverPreview").src=e,document.querySelector("#fileName").innerHTML=a.name})),t.readAsDataURL(a)}}),React.createElement("span",{className:"file-cta"},React.createElement("span",{className:"file-icon"},React.createElement("i",{className:"fas fa-upload"})),React.createElement("span",{className:"file-label"},"Choose a fileâ€¦")),React.createElement("span",{id:"fileName",className:"file-name"},"Use a 2:3 aspect ratio"))),React.createElement("div",{className:"",style:{width:200}},React.createElement("figure",{className:"image is-2by3"},React.createElement("img",{id:"coverPreview",src:"/assets/img/1080x1920.png",alt:"Placeholder image"}))))),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("span",{id:"create-novel-error-span",className:"has-text-danger"}),React.createElement("div",{className:"control is-pulled-right"},React.createElement("input",{className:"formSubmit button is-link",type:"submit",value:"Create"})));ReactDOM.render(React.createElement(a,{csrf:e.csrf}),document.getElementById("create-content"))};handleCreateNovel=e=>{e.preventDefault();const a=document.getElementById("title").value,t=document.getElementById("cover"),s=document.getElementById("create-novel-error-span");if(e.target.querySelector("#_csrf").value,!a)return void(s.innerHTML="Title is required!");const c=t.files[0];if(!c||void 0===c)return void(s.innerHTML="Cover is required!");const r=new FormData(document.querySelector("#createNovelForm"));n.sendMultipartPost("/createNovel",r,i)};const i=e=>{console.log("got response"),console.log(e)};e.exports={init:async(e=[])=>{const a=await fetch("/getToken"),t=await a.json();ReactDOM.render(React.createElement(s,{csrf:t.csrfToken}),document.getElementById("create-content")),e.forEach((e=>{ReactDOM.render(React.createElement(c,{csrf:t.csrfToken,novel:e}),document.getElementById("novel-cards"))})),ReactDOM.render(React.createElement(r,{csrf:t.csrfToken}),document.getElementById("novel-cards"))}}},603:e=>{const a=(e,a,t)=>{e.error?console.log(e.error):(e.redirect&&(window.location=e.redirect),t&&(e.csrfToken=a._csrf,t(e)))};e.exports={sendPost:async(e,t,n)=>{const s=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),c=await s.json();a(c,t,n)},sendMultipartPost:async(e,t,n)=>{const s=await fetch(e,{method:"POST",headers:{"Content-Type":"multipart/form-data"},body:t}),c=await s.json();a(c,data,n)}}},984:e=>{e.exports={init:async()=>{const e=await fetch("/getToken");await e.json()}}},911:e=>{e.exports={init:async()=>{const e=await fetch("/getToken");await e.json()}}},316:(e,a,t)=>{const n=t(603),s=e=>{e.preventDefault();const a=e.target.querySelector("#user").value,t=e.target.querySelector("#pass").value,s=e.target.querySelector("#_csrf").value;return a&&t?(n.sendPost(e.target.action,{username:a,pass:t,_csrf:s}),!1):(e.target.querySelector("#login-error-span").innerHTML="Username or password is empty!",!1)},c=e=>{e.preventDefault();const a=e.target.querySelector("#user").value,t=e.target.querySelector("#pass").value,s=e.target.querySelector("#pass2").value,c=e.target.querySelector("#_csrf").value;return a&&t&&s?t!==s?(e.target.querySelector("#signup-error-span").innerHTML="Passwords do not match!",!1):(n.sendPost(e.target.action,{username:a,pass:t,pass2:s,_csrf:c}),!1):(e.target.querySelector("#signup-error-span").innerHTML="Username or password is empty!",!1)},r=e=>React.createElement("form",{id:"loginForm",name:"loginForm",onSubmit:s,action:"/login",method:"POST",className:"mainForm box"},React.createElement("div",{className:"title"},React.createElement("h1",null,"Login")),React.createElement("div",{className:"field"},React.createElement("label",{className:"label",htmlFor:"username"},"Username: "),React.createElement("div",{className:"control has-icons-left"},React.createElement("input",{className:"input",id:"user",type:"text",name:"username",placeholder:"Username"}),React.createElement("span",{className:"icon is-small is-left"},React.createElement("i",{className:"fas fa-user"})))),React.createElement("div",{className:"field"},React.createElement("label",{className:"label",htmlFor:"pass"},"Password: "),React.createElement("div",{className:"control has-icons-left"},React.createElement("input",{className:"input",id:"pass",type:"password",name:"pass",placeholder:"Password"}),React.createElement("span",{className:"icon is-small is-left"},React.createElement("i",{className:"fa-solid fa-lock"})))),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("span",{id:"login-error-span",className:"has-text-danger"}),React.createElement("div",{className:"control is-pulled-right"},React.createElement("input",{className:"formSubmit button is-link",type:"submit",value:"Sign in"}))),l=e=>(authenticateUsername=async a=>{const t=a.currentTarget;await n.sendPost("/isUsernameAvailable",{username:a.currentTarget.value,_csrf:e.csrf},(e=>{let a=t.parentElement,n=a.querySelector("#username-success-icon"),s=a.parentElement.querySelector("#isAvailable");e.found?(n.innerHTML='<i class="fa-solid fa-exclamation"></i>',s.innerHTML="This username is taken",s.classList="help is-danger"):(n.innerHTML='<i class="fas fa-check"></i>',s.innerHTML="This username is available",s.classList="help is-success")}))},React.createElement("form",{id:"signupForm",name:"signupForm",onSubmit:c,action:"/signup",method:"POST",className:"mainForm box"},React.createElement("div",{className:"title"},React.createElement("h1",null,"Sign Up")),React.createElement("div",{className:"field"},React.createElement("label",{className:"label",htmlFor:"username"},"Username: "),React.createElement("div",{className:"control has-icons-left has-icons-right"},React.createElement("input",{className:"input",id:"user",type:"text",name:"username",placeholder:"Username",onChange:authenticateUsername}),React.createElement("span",{className:"icon is-small is-left"},React.createElement("i",{className:"fas fa-user"})),React.createElement("span",{id:"username-success-icon",className:"icon is-small is-right"})),React.createElement("p",{id:"isAvailable",className:"help is-success"})),React.createElement("div",{className:"field"},React.createElement("label",{className:"label",htmlFor:"pass"},"Password: "),React.createElement("div",{className:"control has-icons-left"},React.createElement("input",{className:"input",id:"pass",type:"password",name:"pass",placeholder:"Password"}),React.createElement("span",{className:"icon is-small is-left"},React.createElement("i",{className:"fa-solid fa-lock"})))),React.createElement("div",{className:"field"},React.createElement("label",{className:"label",htmlFor:"pass2"},"Password: "),React.createElement("div",{className:"control has-icons-left"},React.createElement("input",{className:"input",id:"pass2",type:"password",name:"pass",placeholder:"Retype Password"}),React.createElement("span",{className:"icon is-small is-left"},React.createElement("i",{className:"fa-solid fa-lock"})))),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("span",{id:"signup-error-span",className:"has-text-danger"}),React.createElement("div",{className:"control is-pulled-right"},React.createElement("input",{className:"formSubmit button is-link",type:"submit",value:"Sign Up"}))));e.exports={init:async()=>{const e=await fetch("/getToken"),a=await e.json();ReactDOM.render(React.createElement(r,{csrf:a.csrfToken}),document.getElementById("login-content"))},renderLoginWindow:async e=>{ReactDOM.render(React.createElement(r,{csrf:e.csrf}),document.getElementById("login-content"))},renderSignUpWindow:async e=>{ReactDOM.render(React.createElement(l,{csrf:e.csrf}),document.getElementById("login-content"))}}},856:e=>{const a=()=>{const e=document.querySelector("header").getAttribute("data-current-page");Array.from(document.querySelector(".navbar-start").children).concat(Array.from(document.querySelector(".navbar-end").children)).forEach((a=>{if(a.id===e)if("login"===e){const e=document.querySelector("#login"),a=document.querySelector("#signup");document.querySelector("#loginForm")?(e.classList="navbar-item is-tab is-active",a.classList="navbar-item is-tab"):(e.classList="navbar-item is-tab",a.classList="navbar-item is-tab is-active",console.log(a.classList.value))}else a.classList="navbar-item is-tab is-active";else"signup"===a.id||(a.classList="navbar-item is-tab")}))};e.exports={Navbar:e=>React.createElement("nav",{className:"navbar is-dark has-shadow"},React.createElement("div",{className:"navbar-brand"},React.createElement("a",{className:"navbar-item",href:"/"},React.createElement("i",{className:"fa-solid fa-scroll"})),React.createElement("a",{className:"navbar-burger",id:"burger",onClick:e=>{e.preventDefault();try{let a=e.currentTarget.parentElement.parentElement.querySelector("#nav-links");e.currentTarget.classList.toggle("is-active"),a.classList.toggle("is-active")}catch(e){console.log(e)}}},React.createElement("span",null),React.createElement("span",null),React.createElement("span",null))),React.createElement("div",{className:"navbar-menu",id:"nav-links"},React.createElement("div",{className:"navbar-start"},React.createElement("a",{id:"home",className:"navbar-item is-tab",href:"/home"},"Home"),React.createElement("a",{id:"create",className:"navbar-item is-tab",href:"/create"},"Create"),React.createElement("a",{id:"library",className:"navbar-item is-tab",href:"/library"},"Library"),React.createElement("a",{id:"profile",className:"navbar-item is-tab",href:"/profile"},"Profile")),React.createElement("div",{className:"navbar-end"},React.createElement("a",{id:"login",className:"navbar-item is-tab",onClick:a},"Login"),React.createElement("a",{id:"signup",className:"navbar-item is-tab",onClick:a},"Sign Up"),React.createElement("a",{id:"signout",className:"navbar-item is-tab"},"Sign Out")))),initializeNavbar:async(e,t)=>{let n=await fetch("/isLoggedIn"),s=await n.json();a();let c=document.getElementById("signout"),r=document.getElementById("signup"),l=document.getElementById("login");if(s.loggedIn)c.style.display="flex",r.style.display="none",l.style.display="none",c.addEventListener("click",(async e=>{e.preventDefault();let a=await fetch("/logout");window.localStorage.setItem("partchment-LoadSignUp",!1),window.location.assign(a.url)}));else{c.style.display="none",r.style.display="flex",l.style.display="flex";let a=!1;null!=document.getElementById("login-content")&&(a=!0),l.addEventListener("click",(async n=>{if(n.preventDefault(),a)return await e.renderLoginWindow({_csrf:t}),!1;{let e=await fetch("/login");return window.localStorage.setItem("partchment-LoadSignUp",!1),window.location.assign(e.url),!1}})),r.addEventListener("click",(async n=>{if(n.preventDefault(),a)return await e.renderSignUpWindow({_csrf:t}),!1;{let e=await fetch("/login");return window.localStorage.setItem("partchment-LoadSignUp",!0),window.location.assign(e.url),!1}}))}},updateSelectedPage:a}},333:e=>{e.exports={init:async()=>{const e=await fetch("/getToken");await e.json()}}}},a={};function t(n){var s=a[n];if(void 0!==s)return s.exports;var c=a[n]={exports:{}};return e[n](c,c.exports,t),c.exports}(()=>{const e=t(832),a=t(984),n=t(911),s=t(316),c=t(856),r=t(333);t(603),window.onload=async()=>{const t=await fetch("/getToken"),l=await t.json();ReactDOM.render(React.createElement(c.Navbar,{csrf:l.csrfToken}),document.getElementById("navbar"));const i={renderLoginWindow:s.renderLoginWindow,renderSignUpWindow:s.renderSignUpWindow};c.initializeNavbar(i,l.csrfToken);let o=document.querySelector("header").getAttribute("data-current-page");switch(o){case"create":e.init();break;case"home":a.init();break;case"library":n.init();break;case"login":await s.init(),"true"===localStorage.getItem("partchment-LoadSignUp")&&(s.renderSignUpWindow(l),window.localStorage.setItem("partchment-LoadSignUp",!1)),c.updateSelectedPage();break;case"profile":r.init();break;default:console.log(`unknown page: ${o}`)}}})()})();